@import "foundation/components/grid";

// Available percentage sizes
// Sizes like 18 is when you want a 20% container but with 1% horizontal 
// marging or padding (1+18+1=20)
$flex-grid-sizes: 14.666667 16.666667 18 20 23 25 31.3333 33.3333 48 49 50 58 60 73 75 98 100 !default;

/*
 * Mixin to create cells widths with flexbox
 */
@mixin -emencia-flex-grid-classes($sizes, $viewport: small) {
    @each $size in $sizes{
        $width: $size / 100;
        $name: floor($size);
        // Will name it like "&.small-50"
        &>.#{$viewport}-#{$name} {
            @include flex(1 0 percentage($width));
            max-width: percentage($width);
        }
    }
}

/*
 * Mixin to create "simple" cells widths
 * Mixin to simulate inline list, used as a fallback
 */
@mixin -emencia-simulate-grid-columns($sizes, $viewport: small) {
    @each $size in $sizes{
        $width: $size / 100;
        $name: floor($size);
        // Will name it like "&.small-50"
        &>.#{$viewport}-#{$name} {
            width: percentage($width);
        }
    }
}

/*
 * Inline list with flexbox
 */
// For browser with flexbox capability (detected from modernizr)
html.flexbox{
    .flex-inline-list,
    .flex-grid{
        @include display-flex;
        @include flex-wrap(wrap);
        // Enforce no horizontal margins to avoid bad cell widths
        margin-left: 0;
        margin-right: 0;
        
        // Remove spacing from default list styles
        &.clean{
            margin: 0;
            padding: 0;
        }
        
        // Cell base
        &>.cell{
            // Default is to have the same width and height for all items using 
            // the largest value from all items
            @include flex(1 0 auto);
            max-width: auto;
            margin: 0;
            list-style-type: none;
            
            // Last element paragraph dont have bottom margin
            &>p:last-child{
                margin: 0;
            }
            
            // Remove negative margin for direct child row
            &>.row{
                margin: 0;
            }
            
            // All container elements are vertically stacked on center
            &.flex-vertical-start-stack{
                @include display-flex;
                @include flex-direction(column);
                @include justify-content(flex-start);
            }
            
            // All container elements are vertically stacked on center
            &.flex-vertical-end-stack{
                @include display-flex;
                @include flex-direction(column);
                @include justify-content(flex-end);
            }
            
            // All container elements are vertically stacked on center
            &.flex-vertical-center-stack{
                @include display-flex;
                @include flex-direction(column);
                @include justify-content(center);
            }
            
            // All container elements are stacked with space around
            &.flex-space-around-stack{
                @include display-flex;
                @include flex-direction(column);
                @include justify-content(space-around);
            }
            
            // All container elements are stacked with space between
            &.flex-space-between-stack{
                @include display-flex;
                @include flex-direction(column);
                @include justify-content(space-between);
            }
        }
        
        @media #{$small-up} {
            @include -emencia-flex-grid-classes($flex-grid-sizes, $viewport: small);
        }
        @media #{$medium-up} {
            @include -emencia-flex-grid-classes($flex-grid-sizes, $viewport: medium);
        }
        @media #{$large-up} {
            @include -emencia-flex-grid-classes($flex-grid-sizes, $viewport: large);
        }
        @media #{$xlarge-up} {
            @include -emencia-flex-grid-classes($flex-grid-sizes, $viewport: xlarge);
        }
        @media #{$xxlarge-up} {
            @include -emencia-flex-grid-classes($flex-grid-sizes, $viewport: xxlarge);
        }
        
        // Some inner padding on cells
        &.padded .cell{
            padding: 0 1%;
        }
        @media #{$small-up} {
            &.small-padded .cell{
                padding: 0 1%;
            }
        }
        @media #{$medium-up} {
            &.medium-padded .cell{
                padding: 0 1%;
            }
        }
        @media #{$large-up} {
            &.large-padded .cell{
                padding: 0 1%;
            }
        }
        @media #{$xlarge-up} {
            &.xlarge-padded .cell{
                padding: 0 1%;
            }
        }
        @media #{$xxlarge-up} {
            &.xxlarge-padded .cell{
                padding: 0 1%;
            }
        }
        
        // Some inner padding on cells
        &.marged .cell{
            margin: 0 1%;
        }
        @media #{$small-up} {
            &.small-marged .cell{
                margin: 0 1%;
            }
        }
        @media #{$medium-up} {
            &.medium-marged .cell{
                margin: 0 1%;
            }
        }
        @media #{$large-up} {
            &.large-marged .cell{
                margin: 0 1%;
            }
        }
        @media #{$xlarge-up} {
            &.xlarge-marged .cell{
                margin: 0 1%;
            }
        }
        @media #{$xxlarge-up} {
            &.xxlarge-marged .cell{
                margin: 0 1%;
            }
        }
    }
    
    // Grid cells have the same padding that Foundation grid columns
    .flex-grid{
        // Cell base
        &>.cell{
            padding: 0 ($column-gutter/2);
            
            &+.cell{
                margin-top: ($column-gutter/2);
                
                @media #{$medium-up} {
                    margin-top: 0;
                }
            }
            
            &.unpadded{
                padding: 0;
            }
            @media #{$small-up} {
                &.small-unpadded{
                    padding: 0;
                }
            }
            @media #{$medium-up} {
                &.medium-unpadded{
                    padding: 0;
                }
            }
            @media #{$large-up} {
                &.large-unpadded{
                    padding: 0;
                }
            }
            @media #{$xlarge-up} {
                &.xlarge-unpadded{
                    padding: 0;
                }
            }
            @media #{$xxlarge-up} {
                &.xxlarge-unpadded{
                    padding: 0;
                }
            }
        }
    }
    
    form{
        // Multiple checkbox select with flexbox
        .flexbox-select{
            .holder > ul{
                margin: 0;
                padding: 0;
                @include display-flex;
                @include flex-wrap(wrap);
                list-style-type: none;
                
                &>li{
                    @include flex(1 0 auto);
                    max-width: auto;
                    
                    input[type="checkbox"]{
                        margin: 0 rem-calc(10px) 0 0;
                    }
                }
            }
        }
    }
}

// Fallback for browsers that dont have flexbox capacities, we inherit from Foundation grid row
html.no-flexbox{
    .flex-inline-list,
    .flex-grid{
        list-style-type: none;
        @extend .row;
        
        &>.cell{
            @extend .columns;
        }
        @media #{$small-up} {
            @include -emencia-simulate-grid-columns($flex-grid-sizes, $viewport: small);
        }
        @media #{$medium-up} {
            @include -emencia-simulate-grid-columns($flex-grid-sizes, $viewport: medium);
        }
        @media #{$large-up} {
            @include -emencia-simulate-grid-columns($flex-grid-sizes, $viewport: large);
        }
        @media #{$xlarge-up} {
            @include -emencia-simulate-grid-columns($flex-grid-sizes, $viewport: xlarge);
        }
        @media #{$xxlarge-up} {
            @include -emencia-simulate-grid-columns($flex-grid-sizes, $viewport: xxlarge);
        }
    }
}