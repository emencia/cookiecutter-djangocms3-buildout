@import "utils/mixins";

/* 
 * **
 * Common addons
 * **
 */

.text-upper{
    text-transform: uppercase !important;
}
.text-important{
    text-decoration: underline !important;
}

.text-thin{
    font-weight: 300 !important;
}
.text-bold{
    font-weight: 400 !important;
}
.text-strong{
    font-weight: 600 !important;
}

h1, h2, h3, h4, h5, h6{
    &.text-thin{
        font-weight: 300 !important;
    }
    &.text-normal{
        font-weight: 400 !important;
    }
    &.text-strong{
        font-weight: 600 !important;
    }
}

// Keep font weight normal on little titles
h5, h6{
    font-weight: normal;
}

// Duplicate titles behavior for simple paragraph
p.title-1{
    @extend h1;
}
p.title-2{
    @extend h2;
}
p.title-3{
    @extend h3;
}
p.title-4{
    @extend h4;
}
p.title-5{
    @extend h5;
}
p.title-6{
    @extend h6;
}

// Remove all margins
.unmarged{
    margin: 0;
}

// Panel addons
.panel{
    // Remove additional titles top margin
    h1:first-child,
    h2:first-child,
    h3:first-child,
    h4:first-child,
    h5:first-child,
    h6:first-child,
    p:first-child{
        margin-top: 0 !important;
    }
    
    // Remove negative children for direct .row elements
    &>.row,
    &> * > .row{
        margin-left: 0;
        margin-right: 0;
    }
}

// Surrounded (top+bottom) element
.surrounded{
    margin-top: 1rem;
    margin-bottom: 1rem;
    padding-top: 2rem;
    padding-bottom: 2rem;
    border-top: rem-calc(1px) solid #fcc241;
    border-bottom: rem-calc(1px) solid #fcc241;
}

// Underlined element
.underline{
    // Base
    &:after{
        content:"";
        display: block;
        width: 50%;
        height: rem-calc(2px);
        margin: 2rem 0;
        border-bottom: rem-calc(2px) solid $black;
    }
    
    // On centered text
    &.text-center{
        &:after{
            margin: 2rem auto;
        }
    }
    
    // Border weight
    &.thin{
        &:after{
            height: rem-calc(1px);
            margin: 1.5rem 0;
            border-bottom: rem-calc(1px) solid $black;
        }
        &.text-center{
            &:after{
                margin: 1.5rem auto;
            }
        }
    }
    &.bold{
        &:after{
            height: rem-calc(5px);
            margin: 2rem 0;
            border-bottom: rem-calc(5px) solid $black;
        }
        &.text-center{
            &:after{
                margin: 2rem auto;
            }
        }
    }
    
    // Border width size
    &.tiny{
        &:after{
            width: 5%;
        }
    }
    &.short{
        &:after{
            width: 15%;
        }
    }
    &.normal{
        &:after{
            width: 40%;
        }
    }
    &.large{
        &:after{
            width: 70%;
        }
    }
    &.full{
        &:after{
            width: 100%;
        }
    }
    
    // Border distance from text
    &.far{
        &:after{
            margin: 2.5rem 0;
        }
        &.text-center{
            &:after{
                margin: 2.5rem auto;
            }
        }
    }
    &.near{
        &:after{
            margin: 1rem 0;
        }
        &.text-center{
            &:after{
                margin: 1rem auto;
            }
        }
    }
}


// Raccourci de positionnement relatif
.relative-position{
    position: relative;
}

// Image en bloc centre
img.centered{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
// Etire proportionellement l'image a la largeur de son conteneur
img.expand{
    width: 100%;
    height: auto;
}

// Improve tables
table{
    // Expand table to the full width
    &.expand{
        width: 100%;
    }
    
    // Active/inactive row
    tr.active{
        td{
            font-weight: bold;
        }
    }
    tr.disabled{
        opacity: .7;
    }
}

// Sometime we need to separate an img from an another adjacent element
img.divider{
    margin-bottom: $paragraph-margin-bottom;
}

// Some easy text shadow class
.shadow{
    @include text-shadow(rgba(30, 30, 30, 0.5) 2px 2px 3px);
}

/*
 * Buttons addons and improvements
 */
button, .button{
    &.reverse-primary {
        color: $primary-color;
        background-color: $white;
        border-color: $primary-color;
        border-style: solid;
        border-width: 1px;
        
        &:hover {
            color: $white;
            background-color: $primary-color;
        }
    }
}

/*
 * Visually transform a dropdown button into a select list with vertical 
 * scrollbar. This is useful for long list items that can impact on page size
 */
.f-dropdown.overflow{
    overflow: auto;
    height: rem-calc(200px);
    // Various sizes
    &.overflow-100{ height: rem-calc(100px); }
    &.overflow-150{ height: rem-calc(150px); }
    &.overflow-200{ height: rem-calc(200px); }
    &.overflow-250{ height: rem-calc(250px); }
    &.overflow-300{ height: rem-calc(300px); }
}

/* 
 * Some usefull stuff for Grids
 */
$row-larger-width: 83rem !default;
.row{
    @include emencia-block-color;
    
    // Fluid row, take the full width but keep normal row and columns behaviors
    &.row-fluid{
        max-width: 100%;
        // Restore the initial behavior restrained to the grid
        .row{
            margin: auto;
            @include grid-row;
            // Preserve nested fluid behavior
            &.row-fluid{
                max-width: 100%;
            }
        }
    }

    // More larger row (around ~1328px instead of 1000px) for extra 
    // large screens
    &.larger{
        @media #{$xlarge-up} {
            max-width: $row-larger-width;
        }
    }
    
    // Apply margin bottom on rows
    .divider{
        margin-bottom: rem-calc(10px);
        @media #{$medium-up} {
            margin-bottom: rem-calc(30px);
        }
    }

    // Remove column padding for simple inner
    & .columns > .row-inner{
        margin-left: -($column-gutter/2);
        margin-right: -($column-gutter/2);
    }

    // Remove padding on columns
    .columns{
        @include emencia-block-color;
        
        // By default, columns dont needs of a divider in medium display and up, 
        // because they should probably floating
        &.divider{
            margin-bottom: rem-calc(5px);
            @media #{$medium-up} {
                margin-bottom: 0;
            }
        }
        
        &.unpadded{
            padding: 0;
        }
        @media #{$small-only} {
            &.small-unpadded{
                padding: 0;
            }
        }
        @media #{$medium-only} {
            &.medium-unpadded{
                padding: 0;
            }
        }
        @media #{$large-only} {
            &.large-unpadded{
                padding: 0;
            }
        }
    }
}


/*
 * Define sections theme colors
 */
.section{
    padding: rem-calc(15px) 0;
    background-color: $white;
    
    @media #{$medium-up} {
        padding: rem-calc(30px) 0;
    }
    @media #{$large-up} {
        padding: rem-calc(50px) 0;
    }
    @media #{$xlarge-up} {
        padding: rem-calc(65px) 0;
    }
    
    // Remove padding on demand
    &.unpadded{
        padding: 0 !important;
    }
    @media #{$small-only} {
        &.small-unpadded{
            padding: 0 !important;
        }
    }
    @media #{$medium-only} {
        &.medium-unpadded{
            padding: 0 !important;
        }
    }
    @media #{$large-only} {
        &.large-unpadded{
            padding: 0 !important;
        }
    }
    
    // Separating spaces between sections
    & + .section{
        margin-top: rem-calc(10px);
    }
    
    @include emencia-block-color;
}

/*
 * Special breadcrumbs element that fit to the page
 */
.breadcrumbs-container{}

/*
 * Forms addons
 */
$form-spacing: rem-calc(16) !default; // Needed because this part dont have access to Foundation 'components/forms' vars
form{
    // Container for inline inputs, all aligned, almost collapsed
    .inline{
        .divide-for-after{
            padding-right: 0.5rem;
        }
        // No matter its styles, button must not be bigger than inputs
        .button{
            padding-top: ($form-spacing / 2) - rem-calc(1px);
            padding-bottom: ($form-spacing / 2);
        }
    }
    // Container that hide their labels
    .hide-label{
        .holder > label,
        .holder > .label{
            display: none;
        }
    }
    // Inherit the same styles from text input but probably wont works well on 
    // some browsers because file input is very special
    input[type="file"]{
        @extend input[type="text"] !optional;
        padding: 0;
    }
}

/*
 * Progress addons
 */
.progress{
    position: relative;
    
    // Progress value that is centered hover the bar meter
    .value{
        position: absolute;
        top: 0;
        left: 50%;
    }
}
