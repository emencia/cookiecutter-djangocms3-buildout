@import "components/icomoon";

/* 
 * **
 * Common addons
 * **
 */

// Duplicate titles behavior for simple paragraph
p.title-1{
    @extend h1;
}
p.title-2{
    @extend h2;
}
p.title-3{
    @extend h3;
}
p.title-4{
    @extend h4;
}
p.title-5{
    @extend h5;
}
p.title-6{
    @extend h6;
}

// Remove all margins
.unmarged{
    margin: 0;
}

// Panel addons
.panel{
    h1:first-child,
    h2:first-child,
    h3:first-child,
    h4:first-child,
    h5:first-child,
    h6:first-child,
    p:first-child{
        margin-top: 0 !important;
    }
}

// Underlined title
.underline{
    &:after{
        content:"";
        display: block;
        width: 5%;
        height: rem-calc(3px);
        border-bottom: rem-calc(3px) solid $black;
    }
    &.text-center:after{
        margin: 0 auto 0;
    }
}
.tiny-underline{
    &:after{
        @extend .underline:after;
        width: 5%;
        border-bottom: rem-calc(1px) solid $black;
    }
    &.text-center:after{
        margin: rem-calc(15px) auto 0;
    }
}


// Marked title (with a transparent background)
.highlighted{
    padding: 0.2em;
    //font-family: $domine-font-family;
    color: $LightGrey1;
    line-height: 1.65;
    @include text-shadow(rgba(0, 0, 0, 0.5) 1px 1px 1px);
    box-decoration-break: clone;
    background-color: rgba(35, 31, 32, 0.8);
}


// Raccourci de positionnement relatif
.relative-position{
    position: relative;
}

// Image en bloc centre
img.centered{
    display: block;
    margin-left: auto;
    margin-right: auto;
}
// Etire proportionellement l'image a la largeur de son conteneur
img.expanded{
    width: 100%;
    height: auto;
}

// Sometime we need to separate an img from an another adjacent element
img.divider{
    margin-bottom: $paragraph-margin-bottom;
}

// Easy text shadow class
.shadow{
    @include text-shadow(rgba(30, 30, 30, 0.5) 2px 2px 3px);
}

// Easy uppercase text class
.upper{
    text-transform: uppercase;

/*
 * Buttons addons and improvements
 */
button, .button{
    /*&.tertiary {
        color: $RedSoft;
        background-color: $white;
        border-color: $RedSoft;
        border-style: solid;
        border-width: 1px;
        
        &:hover {
            color: $white;
            background-color: $RedSoft;
        }
    }*/

    // Make stronger button
    &.strong{
        font-weight: bold;
        text-transform: uppercase;
    }
}

/*
 * Visually transform a dropdown button into a select list with vertical 
 * scrollbar. This is useful for long list items that can impact on page size
 */
.f-dropdown.overflow{
    overflow: auto;
    height: rem-calc(200px);
    // Various sizes
    &.overflow-100{ height: rem-calc(100px); }
    &.overflow-150{ height: rem-calc(150px); }
    &.overflow-200{ height: rem-calc(200px); }
    &.overflow-250{ height: rem-calc(250px); }
    &.overflow-300{ height: rem-calc(300px); }
}

/* 
 * Some usefull stuff for Grids
 */
// Fluid row, take the full width but keep normal row and columns behaviors
.row.row-fluid{
    max-width: 100%;
    // Restore the initial behavior restrained to the grid
    .row{
        margin: auto;
        @include grid-row;
        // Preserve nested fluid behavior
        &.row-fluid{
            max-width: 100%;
        }
    }
}

// More larger row (around ~1328px instead of 1000px) for extra 
// large screens
$row-larger-width: 83rem !default;
.row.larger{
    @media #{$xlarge-up} {
        max-width: $row-larger-width;
    }
}

// Remove column padding for simple inner
.row .columns > .row-inner{
    margin-left: -($column-gutter/2);
    margin-right: -($column-gutter/2);
}

// Remove padding on columns
.columns{
    &.unpadded{
        padding: 0;
    }
    @media #{$small-only} {
        &.small-unpadded{
            padding: 0;
        }
    }
    @media #{$medium-only} {
        &.medium-unpadded{
            padding: 0;
        }
    }
    @media #{$large-only} {
        &.large-unpadded{
            padding: 0;
        }
    }
}

/*
 * Supplementary divider classes
 */
// Apply margin bottom on rows
.row.divider{
    margin-bottom: rem-calc(10px);
    @media #{$medium-up} {
        margin-bottom: rem-calc(30px);
    }
}
// By default, columns dont needs of a divider in medium display and up, 
// because they should probably floating
.columns.divider{
    margin-bottom: rem-calc(5px);
    @media #{$medium-up} {
        margin-bottom: 0;
    }
}



/*
 * Define sections containers
 */
.section{
    padding: rem-calc(15px) 0;
    background-color: $white;
    
    @media #{$medium-up} {
        padding: rem-calc(30px) 0;
    }
    @media #{$large-up} {
        padding: rem-calc(50px) 0;
    }
    @media #{$xlarge-up} {
        padding: rem-calc(65px) 0;
    }
}
